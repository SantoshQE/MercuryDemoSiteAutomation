
https://www.softwaretestingo.com/ness-technologies-interview-questions/

If there is Login Page, after entering credentials and submit button it will redirect to Home Page.
ans:  
public class Test()
{
     Static WebDriver driver;

@BeforeTest()
Public void runPreCondition()
{
    driver = new ChromeDriver();
    String ProjectPath = System.getProperty("user.dir");
    System.setProperty("webdriver.chrome.driver", ProjectPath + "//SeleniumDrivers//ChromeDriver.exe") ;
}
@Test
Public void checklogin()
{
   driver.navigate.to("https://www.google.com");
   
    

}


}

===========================================
If there is a specific element int webpage which loading donâ€™t have a fixed time, how will you handle this?
Ans : Will make use of explicit wait
WebDriverWait W = new WebDriverWait(driver,10);
W.until(ExpectedConditions.elementtobeclickable(by.id())) 
===========================================
What is the difference between Navigate.To() and driver.get()?
Ans : driver.get --> will wait till all the DOM is loaded 
      driver.navigate.to() --> will not wait for all the DOM to be loaded, it also provides further methods such as forword,back etc
===========================================
What are the methods in action class.?
Ans : contextClick, doubleClick,keyDown,keyUp,mousemove,build,perform,drangAnddropBy,clickAndhold
===========================================
Code for Slide-bar and slide action using Webdriver
Ans : 
driver.get("http://jqueryui.com/slider/");

        WebDriver driver = new InternetExplorerDriver();
        driver.get("http://jqueryui.com/slider/");
        driver.switchTo().frame(0); //need to switch to this frame before clicking the slider
        WebElement slider = driver.findElement(By.xpath("//div[@id='slider']/span"));
        Actions move = new Actions(driver);
        Action action = (Action) move.dragAndDropBy(slider, 30, 0).build();
        action.perform();
   }

=================================================================================================
What is the difference between ImplicitWait and ExplicitWait()?
Ans : 
Implicit Wait --> will hold the driver execution till a specific time , post it gives timeoutexeception.
An implicit wait makes WebDriver poll the DOM for a certain amount of time when trying to locate an element.
Explicit Wait --> Its a conditional wait based on a predefined  time and based on object state specified using expectedconditions
WebDriverWait W = new WebDriverWait(driver,10);
W.until(ExpectedConditions.elementTobeClickable(By.id()));
=================================================================================================
What is the significance of testng.xml?
Ans:
testng.xml file is a configuration file in TestNG. It is used to define test suites and tests. It is also used to pass Parameters to the test methods. It provides different options to include packages, classes and independent test methods in our test suite.
=================================================================================================
How Listeners are defined in TestNG.xml?
Ans: 
Listener is defined as interface that modifes the default TestNG's behavior. As the name suggests Listeners "listen" to the event defined in the selenium script and behave accordingly. It is used in selenium by implementing Listeners Interface. It allows customizing TestNG reports or logs
Below are the few TestNG listeners:

IAnnotationTransformer ,
IAnnotationTransformer2 ,
IConfigurable ,
IConfigurationListener ,
IExecutionListener,
IHookable ,
IInvokedMethodListener ,
IInvokedMethodListener2 ,
IMethodInterceptor ,
IReporter,
ISuiteListener,
ITestListener .
=================================================================================================
Which are the Methods included in ExplicitWait?
Ans:
expectedconditions.visibilityofElementLocated(By.id)
expectedconditions.elementTobeselected(By.id)
expectedconditions.elementTobeclickable(By.id)
=================================================================================================
What are the challenges in Selenium?
Ans:
Pop-up Windows. ...
Dynamic Content. ...
Flakiness. ...
Mobile Testing. ...
Limited Reporting. ...
Multi-tab Testing. ...
Manual Testing. ...
=================================================================================================
What is code for using right-click?
Ans:
Actions action = new Actions(driver).contextClick(element);
action.build().perform();
=================================================================================================
Write a code enter credentials and submit in which are in the second frame, switch back to Main WebPage.
Ans:
=================================================================================================
What is an interface?
Ans : 
Interface is a special class in java which holds abstract methods, a class can implement many interfaces thus allowing multiple inheritance.
An interface is just like Java Class, but it only has static constants and abstract method. Java uses Interface to implement multiple inheritance. A Java class can implement multiple Java Interfaces. All methods in an interface are implicitly public and abstract
Every class must override the methods declared in an interface
=================================================================================================
What is an abstraction?
Ans : 
Abstraction is the process in Java which is used to hide certain details and only show the essential features of the object. In other words, it deals with the outside view of an object (interface).
=================================================================================================
Can we achieve 100% percent abstraction in an abstract class and if yes How? if no why?
Ans:

How many parts of Java is covered in selenium?
Ans :

Array Vs ArrayList
Ans:
First and Major difference between Array and ArrayList in Java is that Array is a fixed length data structure while ArrayList is a variable length Collection class. You can not change length of Array once created in Java but ArrayList re-size itself when gets full depending upon capacity and load factor.

HashMap Vs HashTable.
Ans:
Hashtable is synchronized, whereas HashMap is not. This makes HashMap better for non-threaded applications, as unsynchronized Objects typically perform better than synchronized ones.
Hashtable does not allow null keys or values.  HashMap allows one null key and any number of null values.
One of HashMap's subclasses is LinkedHashMap, so in the event that you'd want predictable iteration order (which is insertion order by default), you could easily swap out the HashMap for a LinkedHashMap. This wouldn't be as easy if you were using Hashtable.
Since synchronization is not an issue for you, I'd recommend HashMap. If synchronization becomes an issue, you may also look at ConcurrentHashMap.







